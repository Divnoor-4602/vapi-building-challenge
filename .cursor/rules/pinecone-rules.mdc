---
description: Use @pinecone-database/pinecone with full type-safety to create indexes, stream and upsert embeds in batches of up to 100 vectors, and run semantic queries. Support namespace-based metadata filtering, apply exponential back-off when HTTP 429 rate limits occur, leverage a hybrid sparse-plus-dense search strategy, and include helper utilities that automatically hydrate Pinecone vectors from database rows for seamless integration.
globs: 
alwaysApply: false
---
### Tool Usage for Code Generation

- When generating code related to Pinecone, always use the `pinecone` MCP and the `search_docs` tool.

- Perform at least two distinct searches per request using different, relevant questions to ensure comprehensive context is gathered before writing code.

### Error Handling

- If an error occurs while executing Pinecone-related code, immediately invoke the `pinecone` MCP and the `search_docs` tool.

- Search for guidance on the specific error encountered and incorporate any relevant findings into your resolution strategy.

### Syntax and Version Accuracy

- Before writing any code, verify and use the correct syntax for the latest stable version of the Pinecone SDK.

- Prefer official code snippets and examples from documentation over generated or assumed field values.

- Do not fabricate field names, parameter values, or request formats.

### SDK Installation Best Practices

- When providing installation instructions, always reference the current official package name.

- For Pinecone, use `npm install pinecone` not deprecated packages like `pinecone-client`.